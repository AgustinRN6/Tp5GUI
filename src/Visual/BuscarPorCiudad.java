/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Visual;

import Clases.Cliente;
import java.util.Iterator;
import java.util.Map;
import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;


public class BuscarPorCiudad extends javax.swing.JInternalFrame {
    private DefaultTableModel modelo = new DefaultTableModel(){
    public boolean isCellEditable(int fila, int columna){ //Metodo que permite editar filas o columna.
        return false;//En este caso no
    }
    };
    
    
    /**
     * Creates new form BuscarPorCiuad
     */
    public BuscarPorCiudad() {
        initComponents();
        cargarCombo();
        armarCabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbBuscarCliente = new javax.swing.JLabel();
        jpPanel = new javax.swing.JPanel();
        jcbElegirCiudad = new javax.swing.JComboBox<>();
        lbCiudades = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtClientes = new javax.swing.JTable();
        btSalir = new javax.swing.JButton();

        setForeground(java.awt.Color.lightGray);

        lbBuscarCliente.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        lbBuscarCliente.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbBuscarCliente.setText("Buscar Clientes de Directorio por Ciudad");
        lbBuscarCliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jpPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 255), 2));

        jcbElegirCiudad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elija una ciudad" }));
        jcbElegirCiudad.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbElegirCiudadItemStateChanged(evt);
            }
        });

        lbCiudades.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbCiudades.setText("Ciudades:");

        jtClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtClientes);

        btSalir.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btSalir.setForeground(new java.awt.Color(0, 153, 153));
        btSalir.setText("Salir");
        btSalir.setToolTipText("");
        btSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpPanelLayout = new javax.swing.GroupLayout(jpPanel);
        jpPanel.setLayout(jpPanelLayout);
        jpPanelLayout.setHorizontalGroup(
            jpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpPanelLayout.createSequentialGroup()
                        .addGroup(jpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbElegirCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbCiudades))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE))
                    .addGroup(jpPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jpPanelLayout.setVerticalGroup(
            jpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpPanelLayout.createSequentialGroup()
                        .addComponent(lbCiudades, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcbElegirCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(186, 186, 186))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jpPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbElegirCiudadItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbElegirCiudadItemStateChanged
        // TODO add your handling code here:
      if(evt.getStateChange() == jcbElegirCiudad.getSelectedIndex()){
          cargarClientes();
      }
      
    }//GEN-LAST:event_jcbElegirCiudadItemStateChanged

    private void btSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalirActionPerformed
        // TODO add your handling code here:
        System.out.println(evt.getActionCommand());
        setVisible(false);
    }//GEN-LAST:event_btSalirActionPerformed
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btSalir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcbElegirCiudad;
    private javax.swing.JPanel jpPanel;
    private javax.swing.JTable jtClientes;
    private javax.swing.JLabel lbBuscarCliente;
    private javax.swing.JLabel lbCiudades;
    // End of variables declaration//GEN-END:variables
private void cargarCombo() {
        for (String ciudadd : Menu.ciudades) {
            jcbElegirCiudad.addItem(ciudadd);
        }
    }
    private void cargarClientes(){
        borrarClientes();//borra la tabla e inicia con otros dato
        System.out.println(jcbElegirCiudad.getSelectedItem());
        String ciudad = (String)jcbElegirCiudad.getSelectedItem();
        for(Cliente c: Menu.directorio.buscarContactos(ciudad)){
              modelo.addRow(new Object[]{c.getDni(),c.getNombre(),c.getApellido(),c.getCiudad(),c.getDireccion(), Menu.directorio.buscarTelefono(c.getApellido())});
        }
        
    }
    
    private void borrarClientes(){
    //para saber el indice de la fila
    int a = modelo.getRowCount()-1;
        for (int i = a; i >= 0; i--) {
    //mientras i sea mayor o igual a cero se sigue el bucle
            modelo.removeRow(i);//i representa el indice de la fila
        }
    }
    private void armarCabecera() {
        modelo.addColumn("DNI");
        modelo.addColumn("Nombre");
        modelo.addColumn("Apellido");
        modelo.addColumn("Ciudad");
        modelo.addColumn("Direccion");
        modelo.addColumn("TELEFONO");
        
        jtClientes.setModel(modelo);
    }

   
  
}
